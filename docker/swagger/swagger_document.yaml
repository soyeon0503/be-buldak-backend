
openapi: 3.0.0
info:
  title: My API
  version: 1.0.0
  description: 불닭이되 API 문서
servers:
  - url: http://localhost:8080
    description: Local development server
security:
  - cookieAuth: []
    csrfHeader: []
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: XSRF-TOKEN
    csrfHeader:
      type: apiKey
      in: header
      name: X-CSRF-TOKEN
  parameters:
    SideMenuId:
      name: id
      in: path
      required: true
      description: 사이드 메뉴 ID
      schema:
        type: integer
        example: 1
  schemas:
    SideMenu:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          maxLength: 100
          example: 아침 식단
        description:
          type: string
          maxLength: 255
          example: 건강한 아침 식단 설명입니다.
        created_at:
          type: string
          format: date-time
          example: '2025-07-13T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-07-13T12:10:00Z'
    SideMenuRequest:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          maxLength: 100
          example: 아침 식단
        description:
          type: string
          maxLength: 255
          example: 샐러드, 계란, 사과가 포함된 아침 식단
paths:
  /sanctum/csrf-cookie:
    get:
      summary: CSRF 토큰 가져오기
      tags: [Security]
      responses:
        '200':
          description: CSRF 토큰 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf_token:
                    type: string
                    example: abc123xyz

  /api/auth/login:
    post:
      summary: 로그인
      tags: [Users]
      parameters:
        - name: X-CSRF-TOKEN
          in: header
          required: true
          schema:
            type: string
          description: CSRF 보호를 위한 X-CSRF-TOKEN 헤더
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: mypassword123
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    example: 1
                  message:
                    type: string
                    example: 로그인 성공
        '401':
          description: 로그인 실패 (잘못된 이메일 또는 비밀번호)

  /api/auth/logout:
    post:
      summary: 로그아웃
      tags: [Users]
      parameters:
        - name: X-CSRF-TOKEN
          in: header
          required: true
          schema:
            type: string
          description: CSRF 보호를 위한 X-CSRF-TOKEN 헤더
      responses:
        '200':
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 로그아웃 되었습니다.
        '401':
          description: 인증 실패

  /api/auth/register:
    post:
      summary: 회원가입
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, password_confirmation, name, birthdate]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: mypassword123
                password_confirmation:
                  type: string
                  format: password
                  example: mypassword123
                name:
                  type: string
                  example: 홍길동
                birthdate:
                  type: string
                  format: date
                  example: 2000-01-01
      responses:
        '201':
          description: 회원가입 성공
        '400':
          description: 입력값 검증 실패
        '409':
          description: 이미 등록된 이메일


  /api/users/{id}:
    get:
      summary: 유저 상세 정보 조회
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 유저 ID
        - name: X-CSRF-TOKEN
          in: header
          required: true
          schema:
            type: string
          description: CSRF 보호를 위한 X-CSRF-TOKEN 헤더
      responses:
        '200':
          description: 유저 상세 정보 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    example: 1
                  email:
                    type: string
                    example: user@example.com
                  birthdate:
                    type: string
                    format: date
                    example: 2000-01-01
        '401':
          description: 인증 실패
        '404':
          description: 유저를 찾을 수 없음

    put:
      summary: 유저 정보 갱신
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 유저 ID
        - name: X-CSRF-TOKEN
          in: header
          required: true
          schema:
            type: string
          description: CSRF 보호를 위한 X-CSRF-TOKEN 헤더
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, name, birthdate]
              properties:
                email:
                  type: string
                  format: email
                  example: newemail@example.com
                name:
                  type: string
                  example: 김철수
                birthdate:
                  type: string
                  format: date
                  example: 1995-06-15
      responses:
        '200':
          description: 유저 정보 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 유저 정보가 업데이트되었습니다.
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 실패
        '403':
          description: 권한 없음
        '404':
          description: 유저를 찾을 수 없음

    delete:
      summary: 회원 탈퇴
      tags: [Users]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 삭제할 유저의 ID
        - name: X-CSRF-TOKEN
          in: header
          required: true
          schema:
            type: string
          description: CSRF 보호를 위한 X-CSRF-TOKEN 헤더
      responses:
        '204':
          description: 회원 탈퇴 성공
        '401':
          description: 인증 실패
        '403':
          description: 권한 없음
        '404':
          description: 유저를 찾을 수 없음

  /api/password/reset:
    post:
      tags: [Password]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
      responses:
        '200':
          description: 인증코드 전송 성공
        '404':
          description: 등록되지 않은 이메일

  /api/password/verify-code:
    post:
      tags: [Password]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, code]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                code:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: 인증 성공
        '400':
          description: 잘못된 인증코드
        '404':
          description: 등록되지 않은 이메일

  /api/password/change:
    post:
      tags: [Password]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, code, new_password, new_password_confirmation]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                code:
                  type: string
                  example: '123456'
                new_password:
                  type: string
                  format: password
                  example: newpassword123
                new_password_confirmation:
                  type: string
                  format: password
                  example: newpassword123
      responses:
        '200':
          description: 비밀번호 변경 성공
        '400':
          description: 인증코드 불일치 또는 비밀번호 확인 불일치
        '404':
          description: 등록되지 않은 이메일

  /api/ingredients:
    get:
      summary: 재료 목록 조회
      tags: [Ingredients]
      responses:
        '200':
          description: 재료 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: 콘치즈
                        description:
                          type: string
                          example: ㅈㅁㅌ 콘치즈
                        image:
                          type: string
                          example: https://example.com/image1.jpg

  /api/side-menu:
    get:
      summary: 사이드 메뉴 목록 조회
      tags: [SideMenu]
      responses:
        '200':
          description: 사이드 메뉴 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SideMenu'

  /side-menu/{id}:
    get:
      summary: 사이드 메뉴 상세 조회
      tags: [SideMenu]
      parameters:
        - $ref: '#/components/parameters/SideMenuId'
      responses:
        '200':
          description: 사이드 메뉴 상세
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SideMenu'
        '404':
          description: 사이드 메뉴를 찾을 수 없음
