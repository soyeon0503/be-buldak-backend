openapi: 3.0.0
info:
  title: 불닭이되 API
  version: "1.0.0"
  description: |
    Laravel-based REST API 문서  
    - 인증 방식: Laravel Sanctum (세션 + XSRF)  
    - CSRF 보호: XSRF-TOKEN 쿠키 + X-XSRF-TOKEN 헤더

servers:
  - url: http://localhost:8080
    description: Local development

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: XSRF-TOKEN
      description: XSRF 방지용 쿠키
    csrfHeader:
      type: apiKey
      in: header
      name: X-XSRF-TOKEN
      description: sanctum/csrf-cookie 호출 후 응답 쿠키 값을 헤더에 담아 전송
      
  parameters:
    UserId:
      name: id
      in: path
      required: true
      schema:
        type: integer
      description: 유저 ID
    RecipeId:
      name: recipe
      in: path
      required: true
      schema:
        type: integer
      description: 레시피 ID
    IngredientId:
      name: id
      in: path
      required: true
      schema:
        type: integer
      description: 재료 ID
  schemas:
    ## 공통 ##
    ApiMessage:
      type: object
      properties:
        message:
          type: string
    ## Auth / User ##
    AuthCredentials:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        birth:
          type: string
          format: date
    UserCreateInput:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required: [email, password, password_confirmation, name, birthdate]
          properties:
            password:
              type: string
              format: password
            password_confirmation:
              type: string
              format: password
    ## Recipe ##
    Recipe:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        image_path:
          type: string
          nullable: true
        description:
          type: string
        ingredients:
          type: array
          items:
            type: integer
        steps:
          type: array
          items:
            type: string
        servings:
          type: integer
        cooking_time:
          type: integer
        spicy:
          type: integer
        saved:
          type: integer
        views:
          type: integer
        rate:
          type: integer
        recommend_side_menus:
          type: array
          items:
            type: integer
        writer:
          type: integer
        comments:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    RecipeInput:
      allOf:
        - $ref: '#/components/schemas/Recipe'
        - type: object
          required:
            - title
            - description
            - ingredients
            - steps
            - servings
            - cooking_time
            - spicy
  ## END components ##
    Comment:
      type: object
      properties:
        id:
          type: integer
          example: 12
        recipe_id:
          type: integer
          example: 3
        user_id:
          type: integer
          example: 7
        score:
          type: integer
          example: 4
        context:
          type: string
          maxLength: 500
          example: "진짜 맛있어요! 또 해먹을래요"
        created_at:
          type: string
          format: date-time
          example: "2025-07-21T12:34:56Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-07-21T13:00:00Z"

    CommentInput:
      type: object
      required:
        - recipe_id
        - score
        - context
      properties:
        recipe_id:
          type: integer
          example: 3
        score:
          type: integer
          example: 5
        context:
          type: string
          maxLength: 500
          example: "맵찔이인데도 맛있게 먹었어요!"

security:
  - cookieAuth: []
    csrfHeader: []

paths:
  ########## Security ##########
  /sanctum/csrf-cookie:
    get:
      tags: [Security]
      summary: XSRF 쿠키 발급
      responses:
        '204':
          description: 성공 (Set-Cookie 헤더 포함)

  ########## Auth ##########
  /api/auth/login:
    post:
      tags: [Auth]
      summary: 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthCredentials'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiMessage'
                  - type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          description: 인증 실패

  /api/auth/logout:
    post:
      tags: [Auth]
      summary: 로그아웃
      responses:
        '200':
          description: 로그아웃 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMessage'

  /api/auth/user:
    get:
      tags: [Auth]
      summary: 현재 로그인 사용자 정보
      responses:
        '200':
          description: 사용자 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 인증 필요

  /api/auth/password-reset/request:
    post:
      tags: [Auth]
      summary: 비밀번호 재설정 링크(코드) 요청
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: 전송 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMessage'
        '404':
          description: 이메일 없음

  /api/auth/password-reset:
    post:
      tags: [Auth]
      summary: 비밀번호 재설정 실행
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, token, password, password_confirmation]
              properties:
                email:
                  type: string
                  format: email
                token:
                  type: string
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
      responses:
        '200':
          description: 변경 완료
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMessage'
        '400':
          description: 토큰 오류 또는 검증 실패

  ########## Users ##########
  /api/users:
    get:
      tags: [Users]
      summary: 사용자 리스트
      responses:
        '200':
          description: 사용자 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags: [Users]
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateInput'
      responses:
        '201':
          description: 생성됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 검증 실패
        '409':
          description: 중복 이메일

  /api/users/{id}:
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      tags: [Users]
      summary: 사용자 상세
      responses:
        '200':
          description: 사용자
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 없음
    put:
      tags: [Users]
      summary: 사용자 수정
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateInput'
      responses:
        '200':
          description: 수정됨
    delete:
      tags: [Users]
      summary: 사용자 삭제
      responses:
        '204':
          description: 삭제 완료

  ########## Ingredient ##########
  /api/ingredients:
    get:
      tags: [Ingredient]
      summary: 재료 목록
      responses:
        '200':
          description: 재료 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: { type: integer }
                    name: { type: string }
                    description: { type: string }
                    image: { type: string }

  /api/ingredients/{id}:
    parameters:
      - $ref: '#/components/parameters/IngredientId'
    get:
      tags: [Ingredient]
      summary: 재료 상세
      responses:
        '200':
          description: 재료
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: integer }
                  name: { type: string }
                  description: { type: string }
                  image: { type: string }
        '404':
          description: 없음

  ########## Recipe ##########
  /api/recipes:
    get:
      tags: [Recipe]
      summary: 레시피 목록
      responses:
        '200':
          description: 레시피 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      tags: [Recipe]
      summary: 레시피 등록
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeInput'
      responses:
        '201':
          description: 생성
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'

  /api/recipes/{recipe}:
    parameters:
      - $ref: '#/components/parameters/RecipeId'
    get:
      tags: [Recipe]
      summary: 레시피 상세
      responses:
        '200':
          description: 레시피
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: 없음
    put:
      tags: [Recipe]
      summary: 레시피 수정
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeInput'
      responses:
        '200':
          description: 수정됨
    delete:
      tags: [Recipe]
      summary: 레시피 삭제
      responses:
        '204':
          description: 삭제 완료

  /api/recipes/{recipe}/view:
    patch:
      tags: [Recipe]
      summary: 조회수 +1
      responses:
        '204':
          description: 증가 완료
        '404':
          description: 없음

  /api/recipes/{recipe}/save:
    patch:
      tags: [Recipe]
      summary: 저장 토글
      responses:
        '200':
          description: 토글 완료
        '401':
          description: 인증 필요
        '404':
          description: 없음

  /api/recipes/{recipe}/eat:
    patch:
      tags: [Recipe]
      summary: 먹음 토글
      responses:
        '200':
          description: 토글 완료
        '401':
          description: 인증 필요
        '404':
          description: 없음

  /api/users/{id}/recipes:
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      tags: [Recipe]
      summary: 특정 유저가 작성한 레시피 목록
      responses:
        '200':
          description: 레시피 배열
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'

  /api/users/{user}/saved-recipes:
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      tags: [Recipe]
      summary: 유저가 저장한 레시피
      responses:
        '200':
          description: 저장 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'

  /api/users/{user}/eaten-recipes:
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      tags: [Recipe]
      summary: 유저가 먹은 레시피
      responses:
        '200':
          description: 먹은 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'

  /api/comments:
    post:
      tags: [Comment]
      summary: 댓글 등록
      security:
        - cookieAuth: []
          csrfHeader: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '201':
          description: 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'

  /api/comments/{id}:
    get:
      tags: [Comment]
      summary: 댓글 상세 보기
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 댓글 상세 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: 댓글을 찾을 수 없음

    put:
      tags: [Comment]
      summary: 댓글 수정
      security:
        - cookieAuth: []
          csrfHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '200':
          description: 수정된 댓글 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '403':
          description: 권한 없음
        '404':
          description: 댓글을 찾을 수 없음

    delete:
      tags: [Comment]
      summary: 댓글 삭제
      security:
        - cookieAuth: []
          csrfHeader: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 삭제 성공
        '403':
          description: 권한 없음
        '404':
          description: 댓글을 찾을 수 없음

  /api/users/{userId}/comments:
    get:
      tags: [Comment]
      summary: 특정 유저가 작성한 댓글 목록
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 유저 댓글 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /api/recipes/{recipeId}/comments:
    get:
      tags: [Comment]
      summary: 특정 레시피에 대한 전체 댓글 목록
      parameters:
        - name: recipeId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 레시피 댓글 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
